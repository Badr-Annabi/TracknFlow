version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: tracknflow-db-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-tracknflow}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./server/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - tracknflow-network

  # Backend API (Development)
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: tracknflow-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 5000
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-tracknflow}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      JWT_SECRET: ${JWT_SECRET:-dev-jwt-secret}
    ports:
      - "5000:5000"
    depends_on:
      - db
    networks:
      - tracknflow-network
    volumes:
      - ./server:/app
      - /app/node_modules
    command: npm run dev

  # Frontend React App (Development)
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: tracknflow-frontend-dev
    restart: unless-stopped
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://localhost:5000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - tracknflow-network
    volumes:
      - ./client:/app
      - /app/node_modules
    command: npm start

networks:
  tracknflow-network:
    driver: bridge

volumes:
  postgres_data_dev:
    driver: local
